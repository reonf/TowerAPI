package io.swagger.api;

import io.swagger.api.creditcard.db.CreditCardDetailsSchema;
import io.swagger.api.creditcard.db.MockCreditCardDB;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.threeten.bp.LocalDate;

import java.util.List;

@Service
public class CreditCardsApiService {

    @Autowired
    private MockCreditCardDB mockCreditCardDB;

    public List<CreditCardDetailsSchema> findAllCreditCards(String name, String creditCardNumber, String cvc, LocalDate expiryDate) {

        //Typically I'd have a repository bean where I call all my DB queries on
        //using JPARepository and returning a model/entity. Then I'd use an @Mapper
        //to map the model to the response entity generated by openAPI
        List<CreditCardDetailsSchema> records = mockCreditCardDB.getCreditCardDetails();

        //for credit card validation, I'd check creditCardNumber consists of exactly only 16 digits
        //Also I am using a string because if a credit card number was entered with leading 0's
        //these would be lost.

        //If creditCardNumber contains 16 digits, try validation DB query

        //If either fails throw an error so we get response 404
        return records;
    }
}

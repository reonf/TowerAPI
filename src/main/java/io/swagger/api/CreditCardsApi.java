/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.34).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import org.threeten.bp.LocalDate;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2022-07-04T10:04:51.993Z[GMT]")
@Validated
public interface CreditCardsApi {

    @Operation(summary = "Finds all CreditCards stored in DB", description = "Stores details of a credit card", tags={ "CreditCards" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "successful operation"),
        
        @ApiResponse(responseCode = "400", description = "Invalid status value") })
    @RequestMapping(value = "/creditCards",
        method = RequestMethod.GET)
    ResponseEntity<Void> findAllCreditCards(@Size(max=50) @Parameter(in = ParameterIn.QUERY, description = "Credit card holder name" ,schema=@Schema()) @Valid @RequestParam(value = "name", required = false) String name, @Parameter(in = ParameterIn.QUERY, description = "Credit Card Number" ,schema=@Schema()) @Valid @RequestParam(value = "creditCardNumber", required = false) Integer creditCardNumber, @Parameter(in = ParameterIn.QUERY, description = "Card Verification Code" ,schema=@Schema()) @Valid @RequestParam(value = "cvc", required = false) String cvc, @Parameter(in = ParameterIn.QUERY, description = "Expiry date of the card" ,schema=@Schema()) @Valid @RequestParam(value = "expiryDate", required = false) LocalDate expiryDate);

}

